server.port=8080
spring.devtools.restart.additional-paths=E:\\crawl\\src\\main\\java\\com\\musiccrawl
# jpa配置
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false 
# true
spring.data.jpa.repositories.enabled=true

entitymanager.packagesToScan= com.musiccrawl.entity

# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/music?useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j2
spring.datasource.logSlowSql=true
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  

# 模板引擎配置
spring.beetl.root = classpath:/templates/
spring.beetl.suffix = .html
spring.beetl.order = 0
spring.beetl.cofig = classpath:beetl.properties

# 静态文件配置
spring.mvc.static-path-pattern= /static/**
